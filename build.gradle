// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: file("config.gradle")

buildscript {
    repositories {
        flatDir {dirs 'libs'}
        maven{url uri('HDCommon/repo')}
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        maven { url 'https://maven.aliyun.com/repository/releases' }
        maven { url 'https://maven.aliyun.com/repository/snapshots' }
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        maven { url 'https://maven.aliyun.com/repository/mapr-public' }
        maven { url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo' }
        maven { url 'https://maven.aliyun.com/repository/apache-snapshots' }
        maven { url 'https://maven.aliyun.com/repository/central' }
    }

    dependencies {
        if(rootProject.projectDir.getName().contains("AsmStore")){
            def versionFile = file('config.properties')// 读取第一步新建的文件
            if (versionFile.canRead()) {// 判断文件读取异常
                Properties versionProps = new Properties()
                FileInputStream fis = new FileInputStream(versionFile)
                versionProps.load(fis)
                classpath versionProps['buildgradle']
                classpath versionProps['aspectJ']
                classpath versionProps['gradleplugin']
                classpath versionProps['realm']
                classpath versionProps['kotlin']
                fis.close()
            } else {
                throw new FileNotFoundException("Could not read config.properties!")
            }
        }
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        flatDir {dirs 'libs'}
        maven{url uri('HDCommon/repo')}
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        maven { url 'https://maven.aliyun.com/repository/releases' }
        maven { url 'https://maven.aliyun.com/repository/snapshots' }
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        maven { url 'https://maven.aliyun.com/repository/mapr-public' }
        maven { url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo' }
        maven { url 'https://maven.aliyun.com/repository/apache-snapshots' }
        maven { url 'https://maven.aliyun.com/repository/central' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}